# Yiwen Zhang 518021911211

    .pos 0
    irmovq  stack, %rsp     #set up stack pointer
    irmovq  src, %rdi
    irmovq  dest, %rsi
    irmovq  $3, %rdx
    call    copy_block        #execute function
    halt                    #terminate

    .align 8
# source block
src:
    .quad 0x00a
    .quad 0x0b0
    .quad 0xc00

# destination block
dest:
    .quad 0x111
    .quad 0x222
    .quad 0x333

copy_block:
    pushq   %rbp
    rrmovq  %rsp, %rbp
    irmovq  $8, %rcx
    subq    %rcx, %rsp
    irmovq  $0, %rcx
    rmmovq  %rcx, -8(%rbp)  #result
    irmovq  $1, %r8
    irmovq  $0, %r9
    irmovq  $8, %r10
L1:
    subq    %r9, %rdx   
    jle      L3         # if len <= 0
L2:
    mrmovq  (%rdi), %rcx
    addq    %r10, %rdi
    rmmovq  %rcx, (%rsi)
    addq    %r10, %rsi
    mrmovq  -8(%rbp), %rax
    xorq    %rcx, %rax
    rmmovq  %rax, -8(%rbp)
    subq    %r8, %rdx
    jmp     L1
L3:
    mrmovq  -8(%rbp), %rax
    addq    %r10, %rsp
    popq    %rbp
    ret

# stack starts here and grows to lower addresses
        .pos 0x300
stack:

