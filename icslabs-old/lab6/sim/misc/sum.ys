# Yiwen Zhang 518021911211

        .pos 0
        irmovq  stack, %rsp     #set up stack pointer
        irmovq  ele1, %rdi
        call    sum_list        #execute function
        halt                    #terminate

# Sample linked list
        
ele1:
        .quad 0x00a
        .quad ele2
ele2:
        .quad 0x0b0
        .quad ele3
ele3:
        .quad 0xc00
        .quad 0


sum_list:
    pushq       %rbp
    rrmovq      %rsp, %rbp
    irmovq      $16, %rcx
    subq        %rcx, %rsp
    irmovq      $0, %rcx
    rmmovq      %rdi, -8(%rbp)  #ls
    rmmovq      %rcx, -16(%rbp)   #val
L1:
    mrmovq      -8(%rbp), %rcx
    irmovq      $0, %rax
    subq        %rax, %rcx
    je          L3      # if ls = null
L2:
    mrmovq      (%rcx), %rcx
    mrmovq      -16(%rbp), %rax
    addq        %rcx, %rax
    rmmovq      %rax, -16(%rbp)
    mrmovq      -8(%rbp), %rax
    mrmovq      8(%rax), %rax
    rmmovq      %rax, -8(%rbp)
    jmp         L1
L3:
    mrmovq      -16(%rbp), %rax
    irmovq      $16, %rcx
    addq        %rcx, %rsp
    popq        %rbp
    ret

# stack starts here and grows to lower addresses
        .pos 0x300
stack:


    